env:
  IMAGE_NODE: chain-testnet
  REGISTRY_HOSTNAME: multiversx

name: Build Docker image & push

on:
  release:
    types: [published]
  pull_request:
  workflow_dispatch:

jobs:
  build-docker-image:
    runs-on: ubuntu-22.04

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Get latest release version
        id: get-latest-version
        run: |
          VERSION=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)
          echo "LATEST_VERSION=$VERSION" >> $GITHUB_ENV

      # - name: Set up QEMU for ARM64
      #   uses: docker/setup-qemu-action@v3

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3
      #   with:
      #     install: true

      # - name: Log into Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and push multi-platform image to Docker Hub
      #   id: push
      #   uses: docker/build-push-action@v6
      #   with:
      #     context: .
      #     file: ./docker/Dockerfile
      #     platforms: linux/amd64,linux/arm64
      #     push: false
      #   tags: |
      #     ${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE_NODE }}:${{ env.LATEST_VERSION }}
      #     ${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE_NODE }}:latest
