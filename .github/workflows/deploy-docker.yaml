env:
  IMAGE_NODE: chain-testnet
  REGISTRY_HOSTNAME: multiversx

name: Build Docker image & push

on:
  release:
    types: [published]
  pull_request:
  workflow_dispatch:

jobs:
  build-docker-image:
    runs-on: ubuntu-22.04

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_HOSTNAME }}/${{ env.IMAGE_NODE }}
          tags: |
            type=semver,pattern={{version}},enable=true
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NODE }}
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
            org.opencontainers.image.source=${{ github.repository }}

      # - name: Set up QEMU for ARM64
      #   uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push multi-platform image to Docker Hub
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
